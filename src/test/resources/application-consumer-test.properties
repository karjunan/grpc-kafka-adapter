grpc.port=8000

avro.schema.name=avroSchema
producerBinding=false
consumerBinding=true

debug=false



###################################
## Consumer Configuration
##################################
#spring.cloud.stream.bindings.input.binder=kafka
#spring.cloud.stream.bindings.output.binder=kafka
#spring.cloud.stream.kafka.binder.defaultBrokerPort=localhost:9092,localhost:9093,localhost:9094
#spring.cloud.stream.bindings.INPUT.destination=t1

#kafka.binder.configuration.isolation.level= read_committed
#spring.cloud.stream.kafka.bindings.input.consumer.autoCommitOffset=false
#spring.cloud.stream.bindings.input.group=roles-topic
#spring.cloud.stream.kafka.streams.binder.applicationId=testAppp
#spring.cloud.stream.kafka.streams.binder.serdeError: logAndContinue
#spring.cloud.stream.kafka.streams.binder.configuration.default.schema.registry.url=http://localhost:8081
#spring.cloud.stream.kafka.streams.binder.configuration.default.key.serializer=org.apache.kafka.common.serialization.StringDeserializer
#spring.cloud.stream.kafka.streams.binder.configuration.default.value.serializer=io.confluent.kafka.serializers.KafkaAvroDeserializer

#spring.cloud.stream.kafka.streams.binder.configuration.default.key.serde=org.apache.kafka.common.serialization.Serdes$StringSerde
#spring.cloud.stream.kafka.streams.binder.configuration.default.value.serde=org.apache.kafka.common.serialization.Serdes$StringSerde
#spring.cloud.stream.bindings.output.nativeEncoding: true
#spring.cloud.stream.bindings.input.nativeDecoding: true
#spring.cloud.stream.kafka.streams.bindings.rules_topic.consumer.valueSerde=org.apache.kafka.common.serialization.Serdes$StringSerde
#spring.cloud.stream.bindings.output.nativeEncoding: true



