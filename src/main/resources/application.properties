grpc_port=8000

spring.application.name=GRPC-SERVER

###################################
## Producer configuration
##################################
spring.kafka.producer.bootstrap_servers=localhost:9092,localhost:9093,localhost:9094
spring.kafka.producer.key_serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value_serializer=io.confluent.kafka.serializers.KafkaAvroSerializer
spring.kafka.producer.schema_registry_url=http://localhost:8081
spring.kafka.producer.enable_idempotence=true
spring.kafka.producer.transactional_id=server-1
spring.kafka.producer.transactional_id_prefix=transactionServer-1-
spring.kafka.producer.transaction_timeout_ms=100

###################################
## Consumer Configuration - Common for all consumers using cloud stream api
##################################
spring.cloud.stream.kafka.binder.defaultBrokerPort=9092,localhost:9093,localhost:9094
#spring.cloud.stream.kafka.binder.consumerProperties.key.deserializer=org.apache.kafka.common.serialization.StringDeserializer
#spring.cloud.stream.kafka.binder.consumerProperties.value.deserializer=io.confluent.kafka.serializers.KafkaAvroDeserializer
spring.cloud.stream.kafka.binder.consumerProperties.schema.registry.url=http://localhost:8081



###################################
## Consumer Configuration - properties to be configured when using cloud stream api
##################################
spring.cloud.stream.bindings.input.group=group1
spring.cloud.stream.bindings.input.destination=t5
spring.cloud.stream.bindings.input.content-type=application/*+avro
spring.cloud.stream.bindings.input.nativeDecoding=true


###################################
## Consumer Configuration -  properties to be configured when using cloud stream api (KStreams)
##################################
spring.cloud.stream.kafka.streams.binder.brokers= localhost:9092,localhost:9093,localhost:9094
spring.cloud.stream.bindings.word-input.group=group2
spring.cloud.stream.bindings.word-input.destination=words-input1
spring.cloud.stream.bindings.word-input.content-type=application/*+avro

spring.cloud.stream.bindings.word-input.nativeDecoding=true
spring.cloud.stream.kafka.streams.bindings.word-input.consumer.materializedAs= all-regions
spring.cloud.stream.kafka.streams.binder.configuration.default.key.serde=org.apache.kafka.common.serialization.Serdes$StringSerde
spring.cloud.stream.kafka.streams.binder.configuration.default.value.serde=org.apache.kafka.common.serialization.Serdes$StringSerde
spring.cloud.stream.kafka.streams.binder.configuration.commit.interval.ms=1000

spring.cloud.stream.bindings.word-output.destination=words-output
spring.cloud.stream.kafka.streams.bindings.word-output.producer.valueSerde=org.apache.kafka.common.serialization.Serdes$LongSerde


###################################
## General Configuration
##################################
#debug=true
avro.schema.name=avroSchema

#################################################################################
# The below configuration is used for conditional annotation. This will be helpful
# for unit testing.
#################################################################################
KStreamAndKTableService=false
ConsumerService=true
producerBinding=true

#debug=true


azure.application-insights.instrumentation-key=77b41a19-bc52-42a1-9d90-7bffe24d4ade
